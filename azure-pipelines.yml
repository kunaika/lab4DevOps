trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  artifactName: 'my-app-artifact'
  buildConfiguration: 'Release'

stages:

# 1. Build Stage
- stage: Build
  displayName: 'Build the project'
  jobs:
  - job: BuildJob
    displayName: 'Build the project artifact'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - task: DotNetCoreCLI@2
      displayName: 'Restore dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(artifactName)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(artifactName)'
        ArtifactName: '$(artifactName)'
        publishLocation: 'Container'

# 2. Deliver Stage
- stage: Deliver
  displayName: 'Download artifact for deployment'
  dependsOn: Build
  jobs:
  - job: DeliverJob
    displayName: 'Download artifact'
    

# 3. Deploy to Dev Environment (Disabled)
- stage: DeployToDev
  displayName: 'Deploy to Dev Environment (skipped)'
  dependsOn: Deliver
  condition: false  # disables this stage
  jobs:
  - job: DeployDevJob
    displayName: 'Dev Deployment Placeholder'
    steps:
    - script: echo "Skipped Dev deployment."

# 4. Deploy to QA Environment (Disabled)
- stage: DeployToQA
  displayName: 'Deploy to QA Environment (skipped)'
  dependsOn: DeployToDev
  condition: false
  jobs:
  - job: DeployQAJob
    displayName: 'QA Deployment Placeholder'
    steps:
    - script: echo "Skipped QA deployment."

# 5. Deploy to Staging Environment (Disabled)
- stage: DeployToStaging
  displayName: 'Deploy to Staging Environment (skipped)'
  dependsOn: DeployToQA
  condition: false
  jobs:
  - job: DeployStagingJob
    displayName: 'Staging Deployment Placeholder'
    steps:
    - script: echo "Skipped Staging deployment."

# 6. Deploy to Production Environment (Disabled)
- stage: DeployToProd
  displayName: 'Deploy to Production Environment (skipped)'
  dependsOn: DeployToStaging
  condition: false
  jobs:
  - job: DeployProdJob
    displayName: 'Production Deployment Placeholder'
    steps:
    - script: echo "Skipped Production deployment."
