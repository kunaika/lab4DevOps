trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  artifactName: 'my-app-artifact'
  buildConfiguration: 'Release'

stages:

# 1. Build Stage
- stage: Build
  displayName: 'Build the project'
  jobs:
  - job: BuildJob
    displayName: 'Build the project artifact'
    steps:
    - task: UseDotNet@2
      displayName: 'Install .NET SDK'
      inputs:
        packageType: 'sdk'
        version: '8.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet
      
    - task: DotNetCoreCLI@2
      displayName: 'Restore dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'
      
    - task: DotNetCoreCLI@2
      displayName: 'Build the project'
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(artifactName)'
        
    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifact'
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)/$(artifactName)
        ArtifactName: $(artifactName)
        publishLocation: 'Container'

# 2. Deliver Stage
- stage: Deliver
  displayName: 'Release artifact to deploy'
  dependsOn: Build
  jobs:
  - job: DeliverJob
    displayName: 'Release artifact'
    steps:
    - download: current
      artifact: $(artifactName)

# 3. Deploy to Dev Environment
- stage: DeployToDev
  displayName: 'Deploy to Dev Environment'
  dependsOn: Deliver
  jobs:
  - job: DeployDevJob
    displayName: 'Simulate Deployment to Dev'
    steps:
    - script: |
        echo "Simulating deployment to Dev Environment"
        echo "Would deploy artifact from: $(Pipeline.Workspace)/$(artifactName)"
      displayName: 'Simulate Deploy to Dev'

# 4. Deploy to QA Environment
- stage: DeployToQA
  displayName: 'Deploy to QA Environment'
  dependsOn: DeployToDev
  jobs:
  - job: DeployQAJob
    displayName: 'Simulate Deployment to QA'
    steps:
    - script: |
        echo "Simulating deployment to QA Environment"
        echo "Would deploy artifact from: $(Pipeline.Workspace)/$(artifactName)"
      displayName: 'Simulate Deploy to QA'

# 5. Deploy to Staging Environment
- stage: DeployToStaging
  displayName: 'Deploy to Staging Environment'
  dependsOn: DeployToQA
  jobs:
  - job: DeployStagingJob
    displayName: 'Simulate Deployment to Staging'
    steps:
    - script: |
        echo "Simulating deployment to Staging Environment"
        echo "Would deploy artifact from: $(Pipeline.Workspace)/$(artifactName)"
      displayName: 'Simulate Deploy to Staging'

# 6. Deploy to Production Environment
- stage: DeployToProd
  displayName: 'Deploy to Production Environment'
  dependsOn: DeployToStaging
  jobs:
  - job: DeployProdJob
    displayName: 'Simulate Deployment to Production'
    steps:
    - script: |
        echo "Simulating deployment to Production Environment"
        echo "Would deploy artifact from: $(Pipeline.Workspace)/$(artifactName)"
      displayName: 'Simulate Deploy to Production'
